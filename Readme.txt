Serena - Tienda Online

Proyecto universitario realizado en 2025 por tres compa√±eros.
Serena es una tienda de ropa distinta, creada para ofrecer prendas originales y diferentes de lo convencional.

Este trabajo busca simular un e-commerce funcional utilizando las tecnolog√≠as vistas en clase (HTML5, CSS3 y JavaScript ES6), aplicando buenas pr√°cticas de programaci√≥n, dise√±o responsivo, validaciones en formularios y almacenamiento de datos en el navegador.

üéØ Objetivos del Proyecto

Desarrollar una tienda online de ropa con funcionalidades reales de un e-commerce.

Implementar un carrito de compras din√°mico, capaz de agregar, modificar y eliminar productos.

Crear un formulario de contacto validado en tiempo real, con retroalimentaci√≥n al usuario.

Incorporar modo oscuro/claro con persistencia en el navegador.

Asegurar un dise√±o atractivo, accesible y responsivo, adaptable a distintas pantallas.

Fomentar el trabajo en equipo, organizando las tareas de dise√±o, maquetado y programaci√≥n.

üìù Descripci√≥n General

La aplicaci√≥n simula una tienda en l√≠nea llamada Serena, enfocada en ofrecer ropa con estilo propio y diferente a lo convencional.

El sitio est√° compuesto por 4 p√°ginas principales:

index.html ‚Üí P√°gina de inicio donde se muestran los productos disponibles con sus im√°genes, nombre, precio y bot√≥n para agregarlos al carrito.

carrito.html ‚Üí Vista del carrito de compras, donde el usuario puede ver sus productos, sumar/restar cantidades, eliminar √≠tems y calcular el total.

contacto.html ‚Üí Formulario de contacto validado con varios campos (nombre, email, tel√©fono, fecha de nacimiento, motivo, mensaje, etc.) y env√≠o simulado mediante Fetch API.

acerca.html ‚Üí P√°gina de presentaci√≥n del proyecto, donde se cuenta la historia y la motivaci√≥n de la tienda.

*Requisitos Implementados
 HTML5

Estructura sem√°ntica: uso de header, nav, main y footer en todas las p√°ginas.

Codificaci√≥n universal: uso de meta charset="UTF-8" para soportar caracteres especiales en espa√±ol.

Favicon: icono de la tienda en la pesta√±a del navegador.

Formularios completos:

Inputs de diferentes tipos (text, email, tel, date, checkbox, radio, textarea, select).

Validaciones con atributos como required, pattern y placeholder.

Accesibilidad: todas las im√°genes incluyen atributo alt.

Botones interactivos: asociados a funciones din√°micas de JavaScript.

 CSS3

Variables CSS: definidas en :root para manejar colores base (--bg, --text, --primary, --accent, --danger).

Modo oscuro/claro: aplicado mediante la clase dark y cambio din√°mico de estilos.

Dise√±o responsivo: uso de grid, flexbox y @media queries para adaptar el dise√±o a distintas resoluciones (desktop, tablet y m√≥vil).

Estilos avanzados:

Transiciones suaves con transition y transform.

Botones estilizados con bordes redondeados y efectos hover.

Sombra (box-shadow) en tarjetas de productos y formularios.

Carrito con √≠tems organizados en rect√°ngulos, con miniaturas de im√°genes, nombre, precio y botones de acci√≥n.

Formulario estilizado, con inputs que resaltan en :focus.

Unificaci√≥n visual: el header y footer son iguales en todas las p√°ginas, con enlaces de navegaci√≥n y redes sociales.

 JavaScript (ES6)

Ejecuci√≥n controlada: uso de addEventListener("DOMContentLoaded") para asegurar que la l√≥gica se ejecute despu√©s de que cargue la p√°gina.

Carrito de compras:

Persistencia con localStorage.

Funciones para agregar productos, incrementar o decrementar cantidad y eliminar.

Renderizado din√°mico de la lista de productos.

C√°lculo autom√°tico del total usando reduce().

Notificaciones flotantes: al agregar un producto, aparece un mensaje animado en la pantalla.

Modo oscuro/claro:

Bot√≥n de alternancia con √≠cono üåô/‚òÄÔ∏è din√°mico.

Guardado de la preferencia en localStorage para mantenerla al recargar.

Formulario de contacto:

Validaci√≥n en tiempo real con checkValidity().

Mensajes de error personalizados debajo de cada campo.

Env√≠o simulado con Fetch API hacia https://jsonplaceholder.typicode.com/posts.

Mensajes din√°micos de confirmaci√≥n o error de red.

Estructura del Proyecto
.
‚îú‚îÄ‚îÄ index.html          P√°gina principal
‚îú‚îÄ‚îÄ carrito.html         Carrito de compras
‚îú‚îÄ‚îÄ contacto.html        Formulario de contacto
‚îú‚îÄ‚îÄ acerca.html          Descripci√≥n e historia
‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îî‚îÄ‚îÄ styles.css       Estilos globales
‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îú‚îÄ‚îÄ main.js          Modo oscuro + carrito b√°sico + notificaciones
‚îÇ   ‚îú‚îÄ‚îÄ carrito.js       L√≥gica del carrito
‚îÇ   ‚îî‚îÄ‚îÄ form.js          Validaci√≥n y env√≠o del formulario
‚îî‚îÄ‚îÄ assets/
    ‚îú‚îÄ‚îÄ images/          Im√°genes de productos + favicon + redes
    ‚îî‚îÄ‚îÄ RobotoFlex-VariableFont.ttf   Fuente

Funcionalidades Destacadas

Carrito persistente

El usuario puede cerrar la pesta√±a y al volver a abrir el carrito, sus productos seguir√°n all√≠ gracias a localStorage.

Se actualizan cantidades, subtotales y total de forma autom√°tica.

Validaci√≥n en tiempo real del formulario

El formulario indica al instante si los datos son inv√°lidos.

Se asegura que todos los campos requeridos est√©n completos antes de enviar.

El env√≠o muestra mensajes din√°micos (‚úÖ √©xito o ‚ùå error).

Modo oscuro/claro

El usuario puede alternar entre ambos modos.

Se recuerda la preferencia al recargar la p√°gina.

Dise√±o moderno y responsivo

Uso de tipograf√≠a clara y minimalista.

Grid de productos adaptable a pantallas grandes, medianas y m√≥viles.

Footer con enlaces de navegaci√≥n y redes sociales.

Integrantes del Grupo

Rafael Cruz 
Francisco Risso 
Facundo Romero

